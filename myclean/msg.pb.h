// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_msg_2eproto__INCLUDED
#define PROTOBUF_msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace msg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_2eproto();
void protobuf_AssignDesc_msg_2eproto();
void protobuf_ShutdownFile_msg_2eproto();

class IpDetect;
class IpClean;
class DetectStats;
class CleanStats;
class CCStat;
class CCStats;
class ActionL4;
class ActionL7;
class ActionBlackholeL4;
class ActionBlackholeL7;
class Actions;
class IpsReq;
class IpConf;
class IpsResp;

// ===================================================================

class IpDetect : public ::google::protobuf::Message {
 public:
  IpDetect();
  virtual ~IpDetect();
  
  IpDetect(const IpDetect& from);
  
  inline IpDetect& operator=(const IpDetect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IpDetect& default_instance();
  
  void Swap(IpDetect* other);
  
  // implements Message ----------------------------------------------
  
  IpDetect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IpDetect& from);
  void MergeFrom(const IpDetect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // required uint64 inPacks = 2;
  inline bool has_inpacks() const;
  inline void clear_inpacks();
  static const int kInPacksFieldNumber = 2;
  inline ::google::protobuf::uint64 inpacks() const;
  inline void set_inpacks(::google::protobuf::uint64 value);
  
  // required uint64 inBits = 3;
  inline bool has_inbits() const;
  inline void clear_inbits();
  static const int kInBitsFieldNumber = 3;
  inline ::google::protobuf::uint64 inbits() const;
  inline void set_inbits(::google::protobuf::uint64 value);
  
  // required uint64 outPacks = 4;
  inline bool has_outpacks() const;
  inline void clear_outpacks();
  static const int kOutPacksFieldNumber = 4;
  inline ::google::protobuf::uint64 outpacks() const;
  inline void set_outpacks(::google::protobuf::uint64 value);
  
  // required uint64 outBits = 5;
  inline bool has_outbits() const;
  inline void clear_outbits();
  static const int kOutBitsFieldNumber = 5;
  inline ::google::protobuf::uint64 outbits() const;
  inline void set_outbits(::google::protobuf::uint64 value);
  
  // required uint64 fragments = 6;
  inline bool has_fragments() const;
  inline void clear_fragments();
  static const int kFragmentsFieldNumber = 6;
  inline ::google::protobuf::uint64 fragments() const;
  inline void set_fragments(::google::protobuf::uint64 value);
  
  // required uint64 wLens = 7;
  inline bool has_wlens() const;
  inline void clear_wlens();
  static const int kWLensFieldNumber = 7;
  inline ::google::protobuf::uint64 wlens() const;
  inline void set_wlens(::google::protobuf::uint64 value);
  
  // required uint64 wFlags = 8;
  inline bool has_wflags() const;
  inline void clear_wflags();
  static const int kWFlagsFieldNumber = 8;
  inline ::google::protobuf::uint64 wflags() const;
  inline void set_wflags(::google::protobuf::uint64 value);
  
  // required uint64 wSips = 9;
  inline bool has_wsips() const;
  inline void clear_wsips();
  static const int kWSipsFieldNumber = 9;
  inline ::google::protobuf::uint64 wsips() const;
  inline void set_wsips(::google::protobuf::uint64 value);
  
  // required uint64 tcpInPacks = 10;
  inline bool has_tcpinpacks() const;
  inline void clear_tcpinpacks();
  static const int kTcpInPacksFieldNumber = 10;
  inline ::google::protobuf::uint64 tcpinpacks() const;
  inline void set_tcpinpacks(::google::protobuf::uint64 value);
  
  // required uint64 tcpOutPacks = 11;
  inline bool has_tcpoutpacks() const;
  inline void clear_tcpoutpacks();
  static const int kTcpOutPacksFieldNumber = 11;
  inline ::google::protobuf::uint64 tcpoutpacks() const;
  inline void set_tcpoutpacks(::google::protobuf::uint64 value);
  
  // required uint64 tcpInBits = 12;
  inline bool has_tcpinbits() const;
  inline void clear_tcpinbits();
  static const int kTcpInBitsFieldNumber = 12;
  inline ::google::protobuf::uint64 tcpinbits() const;
  inline void set_tcpinbits(::google::protobuf::uint64 value);
  
  // required uint64 tcpOutBits = 13;
  inline bool has_tcpoutbits() const;
  inline void clear_tcpoutbits();
  static const int kTcpOutBitsFieldNumber = 13;
  inline ::google::protobuf::uint64 tcpoutbits() const;
  inline void set_tcpoutbits(::google::protobuf::uint64 value);
  
  // required uint64 tcpInSyns = 14;
  inline bool has_tcpinsyns() const;
  inline void clear_tcpinsyns();
  static const int kTcpInSynsFieldNumber = 14;
  inline ::google::protobuf::uint64 tcpinsyns() const;
  inline void set_tcpinsyns(::google::protobuf::uint64 value);
  
  // required uint64 tcpOutSyns = 15;
  inline bool has_tcpoutsyns() const;
  inline void clear_tcpoutsyns();
  static const int kTcpOutSynsFieldNumber = 15;
  inline ::google::protobuf::uint64 tcpoutsyns() const;
  inline void set_tcpoutsyns(::google::protobuf::uint64 value);
  
  // required uint64 tcpInAcks = 16;
  inline bool has_tcpinacks() const;
  inline void clear_tcpinacks();
  static const int kTcpInAcksFieldNumber = 16;
  inline ::google::protobuf::uint64 tcpinacks() const;
  inline void set_tcpinacks(::google::protobuf::uint64 value);
  
  // required uint64 tcpOutAcks = 17;
  inline bool has_tcpoutacks() const;
  inline void clear_tcpoutacks();
  static const int kTcpOutAcksFieldNumber = 17;
  inline ::google::protobuf::uint64 tcpoutacks() const;
  inline void set_tcpoutacks(::google::protobuf::uint64 value);
  
  // required uint64 tcpInFins = 18;
  inline bool has_tcpinfins() const;
  inline void clear_tcpinfins();
  static const int kTcpInFinsFieldNumber = 18;
  inline ::google::protobuf::uint64 tcpinfins() const;
  inline void set_tcpinfins(::google::protobuf::uint64 value);
  
  // required uint64 tcpOutFins = 19;
  inline bool has_tcpoutfins() const;
  inline void clear_tcpoutfins();
  static const int kTcpOutFinsFieldNumber = 19;
  inline ::google::protobuf::uint64 tcpoutfins() const;
  inline void set_tcpoutfins(::google::protobuf::uint64 value);
  
  // required uint64 tcpInRsts = 20;
  inline bool has_tcpinrsts() const;
  inline void clear_tcpinrsts();
  static const int kTcpInRstsFieldNumber = 20;
  inline ::google::protobuf::uint64 tcpinrsts() const;
  inline void set_tcpinrsts(::google::protobuf::uint64 value);
  
  // required uint64 tcpOutRsts = 21;
  inline bool has_tcpoutrsts() const;
  inline void clear_tcpoutrsts();
  static const int kTcpOutRstsFieldNumber = 21;
  inline ::google::protobuf::uint64 tcpoutrsts() const;
  inline void set_tcpoutrsts(::google::protobuf::uint64 value);
  
  // required uint64 udpInPacks = 22;
  inline bool has_udpinpacks() const;
  inline void clear_udpinpacks();
  static const int kUdpInPacksFieldNumber = 22;
  inline ::google::protobuf::uint64 udpinpacks() const;
  inline void set_udpinpacks(::google::protobuf::uint64 value);
  
  // required uint64 udpOutPacks = 23;
  inline bool has_udpoutpacks() const;
  inline void clear_udpoutpacks();
  static const int kUdpOutPacksFieldNumber = 23;
  inline ::google::protobuf::uint64 udpoutpacks() const;
  inline void set_udpoutpacks(::google::protobuf::uint64 value);
  
  // required uint64 udpInBits = 24;
  inline bool has_udpinbits() const;
  inline void clear_udpinbits();
  static const int kUdpInBitsFieldNumber = 24;
  inline ::google::protobuf::uint64 udpinbits() const;
  inline void set_udpinbits(::google::protobuf::uint64 value);
  
  // required uint64 udpOutBits = 25;
  inline bool has_udpoutbits() const;
  inline void clear_udpoutbits();
  static const int kUdpOutBitsFieldNumber = 25;
  inline ::google::protobuf::uint64 udpoutbits() const;
  inline void set_udpoutbits(::google::protobuf::uint64 value);
  
  // required uint64 icmpInPacks = 26;
  inline bool has_icmpinpacks() const;
  inline void clear_icmpinpacks();
  static const int kIcmpInPacksFieldNumber = 26;
  inline ::google::protobuf::uint64 icmpinpacks() const;
  inline void set_icmpinpacks(::google::protobuf::uint64 value);
  
  // required uint64 icmpOutPacks = 27;
  inline bool has_icmpoutpacks() const;
  inline void clear_icmpoutpacks();
  static const int kIcmpOutPacksFieldNumber = 27;
  inline ::google::protobuf::uint64 icmpoutpacks() const;
  inline void set_icmpoutpacks(::google::protobuf::uint64 value);
  
  // required uint64 icmpInBits = 28;
  inline bool has_icmpinbits() const;
  inline void clear_icmpinbits();
  static const int kIcmpInBitsFieldNumber = 28;
  inline ::google::protobuf::uint64 icmpinbits() const;
  inline void set_icmpinbits(::google::protobuf::uint64 value);
  
  // required uint64 icmpOutBits = 29;
  inline bool has_icmpoutbits() const;
  inline void clear_icmpoutbits();
  static const int kIcmpOutBitsFieldNumber = 29;
  inline ::google::protobuf::uint64 icmpoutbits() const;
  inline void set_icmpoutbits(::google::protobuf::uint64 value);
  
  // required uint64 igmpInPacks = 30;
  inline bool has_igmpinpacks() const;
  inline void clear_igmpinpacks();
  static const int kIgmpInPacksFieldNumber = 30;
  inline ::google::protobuf::uint64 igmpinpacks() const;
  inline void set_igmpinpacks(::google::protobuf::uint64 value);
  
  // required uint64 igmpOutPacks = 31;
  inline bool has_igmpoutpacks() const;
  inline void clear_igmpoutpacks();
  static const int kIgmpOutPacksFieldNumber = 31;
  inline ::google::protobuf::uint64 igmpoutpacks() const;
  inline void set_igmpoutpacks(::google::protobuf::uint64 value);
  
  // required uint64 igmpInBits = 32;
  inline bool has_igmpinbits() const;
  inline void clear_igmpinbits();
  static const int kIgmpInBitsFieldNumber = 32;
  inline ::google::protobuf::uint64 igmpinbits() const;
  inline void set_igmpinbits(::google::protobuf::uint64 value);
  
  // required uint64 igmpOutBits = 33;
  inline bool has_igmpoutbits() const;
  inline void clear_igmpoutbits();
  static const int kIgmpOutBitsFieldNumber = 33;
  inline ::google::protobuf::uint64 igmpoutbits() const;
  inline void set_igmpoutbits(::google::protobuf::uint64 value);
  
  // required uint64 httpReqs = 34;
  inline bool has_httpreqs() const;
  inline void clear_httpreqs();
  static const int kHttpReqsFieldNumber = 34;
  inline ::google::protobuf::uint64 httpreqs() const;
  inline void set_httpreqs(::google::protobuf::uint64 value);
  
  // required uint64 httpConns = 35;
  inline bool has_httpconns() const;
  inline void clear_httpconns();
  static const int kHttpConnsFieldNumber = 35;
  inline ::google::protobuf::uint64 httpconns() const;
  inline void set_httpconns(::google::protobuf::uint64 value);
  
  // required uint64 httpGets = 36;
  inline bool has_httpgets() const;
  inline void clear_httpgets();
  static const int kHttpGetsFieldNumber = 36;
  inline ::google::protobuf::uint64 httpgets() const;
  inline void set_httpgets(::google::protobuf::uint64 value);
  
  // required uint64 httpPosts = 37;
  inline bool has_httpposts() const;
  inline void clear_httpposts();
  static const int kHttpPostsFieldNumber = 37;
  inline ::google::protobuf::uint64 httpposts() const;
  inline void set_httpposts(::google::protobuf::uint64 value);
  
  // required uint64 httpPuts = 38;
  inline bool has_httpputs() const;
  inline void clear_httpputs();
  static const int kHttpPutsFieldNumber = 38;
  inline ::google::protobuf::uint64 httpputs() const;
  inline void set_httpputs(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:msg.IpDetect)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint64 inpacks_;
  ::google::protobuf::uint64 inbits_;
  ::google::protobuf::uint64 outpacks_;
  ::google::protobuf::uint64 outbits_;
  ::google::protobuf::uint64 fragments_;
  ::google::protobuf::uint64 wlens_;
  ::google::protobuf::uint64 wflags_;
  ::google::protobuf::uint64 wsips_;
  ::google::protobuf::uint64 tcpinpacks_;
  ::google::protobuf::uint64 tcpoutpacks_;
  ::google::protobuf::uint64 tcpinbits_;
  ::google::protobuf::uint64 tcpoutbits_;
  ::google::protobuf::uint64 tcpinsyns_;
  ::google::protobuf::uint64 tcpoutsyns_;
  ::google::protobuf::uint64 tcpinacks_;
  ::google::protobuf::uint64 tcpoutacks_;
  ::google::protobuf::uint64 tcpinfins_;
  ::google::protobuf::uint64 tcpoutfins_;
  ::google::protobuf::uint64 tcpinrsts_;
  ::google::protobuf::uint64 tcpoutrsts_;
  ::google::protobuf::uint64 udpinpacks_;
  ::google::protobuf::uint64 udpoutpacks_;
  ::google::protobuf::uint64 udpinbits_;
  ::google::protobuf::uint64 udpoutbits_;
  ::google::protobuf::uint64 icmpinpacks_;
  ::google::protobuf::uint64 icmpoutpacks_;
  ::google::protobuf::uint64 icmpinbits_;
  ::google::protobuf::uint64 icmpoutbits_;
  ::google::protobuf::uint64 igmpinpacks_;
  ::google::protobuf::uint64 igmpoutpacks_;
  ::google::protobuf::uint64 igmpinbits_;
  ::google::protobuf::uint64 igmpoutbits_;
  ::google::protobuf::uint64 httpreqs_;
  ::google::protobuf::uint64 httpconns_;
  ::google::protobuf::uint64 httpgets_;
  ::google::protobuf::uint64 httpposts_;
  ::google::protobuf::uint64 httpputs_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IpDetect* default_instance_;
};
// -------------------------------------------------------------------

class IpClean : public ::google::protobuf::Message {
 public:
  IpClean();
  virtual ~IpClean();
  
  IpClean(const IpClean& from);
  
  inline IpClean& operator=(const IpClean& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IpClean& default_instance();
  
  void Swap(IpClean* other);
  
  // implements Message ----------------------------------------------
  
  IpClean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IpClean& from);
  void MergeFrom(const IpClean& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // required uint64 inPacks = 2;
  inline bool has_inpacks() const;
  inline void clear_inpacks();
  static const int kInPacksFieldNumber = 2;
  inline ::google::protobuf::uint64 inpacks() const;
  inline void set_inpacks(::google::protobuf::uint64 value);
  
  // required uint64 inBits = 3;
  inline bool has_inbits() const;
  inline void clear_inbits();
  static const int kInBitsFieldNumber = 3;
  inline ::google::protobuf::uint64 inbits() const;
  inline void set_inbits(::google::protobuf::uint64 value);
  
  // required uint64 frdPacks = 4;
  inline bool has_frdpacks() const;
  inline void clear_frdpacks();
  static const int kFrdPacksFieldNumber = 4;
  inline ::google::protobuf::uint64 frdpacks() const;
  inline void set_frdpacks(::google::protobuf::uint64 value);
  
  // required uint64 frdBits = 5;
  inline bool has_frdbits() const;
  inline void clear_frdbits();
  static const int kFrdBitsFieldNumber = 5;
  inline ::google::protobuf::uint64 frdbits() const;
  inline void set_frdbits(::google::protobuf::uint64 value);
  
  // required uint64 dropPacks = 6;
  inline bool has_droppacks() const;
  inline void clear_droppacks();
  static const int kDropPacksFieldNumber = 6;
  inline ::google::protobuf::uint64 droppacks() const;
  inline void set_droppacks(::google::protobuf::uint64 value);
  
  // required uint64 dropBits = 7;
  inline bool has_dropbits() const;
  inline void clear_dropbits();
  static const int kDropBitsFieldNumber = 7;
  inline ::google::protobuf::uint64 dropbits() const;
  inline void set_dropbits(::google::protobuf::uint64 value);
  
  // required uint64 httpReqs = 8;
  inline bool has_httpreqs() const;
  inline void clear_httpreqs();
  static const int kHttpReqsFieldNumber = 8;
  inline ::google::protobuf::uint64 httpreqs() const;
  inline void set_httpreqs(::google::protobuf::uint64 value);
  
  // required uint64 httpConns = 9;
  inline bool has_httpconns() const;
  inline void clear_httpconns();
  static const int kHttpConnsFieldNumber = 9;
  inline ::google::protobuf::uint64 httpconns() const;
  inline void set_httpconns(::google::protobuf::uint64 value);
  
  // optional uint64 blackholeBits = 10;
  inline bool has_blackholebits() const;
  inline void clear_blackholebits();
  static const int kBlackholeBitsFieldNumber = 10;
  inline ::google::protobuf::uint64 blackholebits() const;
  inline void set_blackholebits(::google::protobuf::uint64 value);
  
  // optional uint64 blackholePacks = 11;
  inline bool has_blackholepacks() const;
  inline void clear_blackholepacks();
  static const int kBlackholePacksFieldNumber = 11;
  inline ::google::protobuf::uint64 blackholepacks() const;
  inline void set_blackholepacks(::google::protobuf::uint64 value);
  
  // optional uint64 TcpReplyPacks = 12;
  inline bool has_tcpreplypacks() const;
  inline void clear_tcpreplypacks();
  static const int kTcpReplyPacksFieldNumber = 12;
  inline ::google::protobuf::uint64 tcpreplypacks() const;
  inline void set_tcpreplypacks(::google::protobuf::uint64 value);
  
  // optional uint64 TcpAcceptPacks = 13;
  inline bool has_tcpacceptpacks() const;
  inline void clear_tcpacceptpacks();
  static const int kTcpAcceptPacksFieldNumber = 13;
  inline ::google::protobuf::uint64 tcpacceptpacks() const;
  inline void set_tcpacceptpacks(::google::protobuf::uint64 value);
  
  // optional uint64 TcpDropPacks = 14;
  inline bool has_tcpdroppacks() const;
  inline void clear_tcpdroppacks();
  static const int kTcpDropPacksFieldNumber = 14;
  inline ::google::protobuf::uint64 tcpdroppacks() const;
  inline void set_tcpdroppacks(::google::protobuf::uint64 value);
  
  // optional uint64 TcpForwardPacks = 15;
  inline bool has_tcpforwardpacks() const;
  inline void clear_tcpforwardpacks();
  static const int kTcpForwardPacksFieldNumber = 15;
  inline ::google::protobuf::uint64 tcpforwardpacks() const;
  inline void set_tcpforwardpacks(::google::protobuf::uint64 value);
  
  // optional uint64 L7DropPacks = 16;
  inline bool has_l7droppacks() const;
  inline void clear_l7droppacks();
  static const int kL7DropPacksFieldNumber = 16;
  inline ::google::protobuf::uint64 l7droppacks() const;
  inline void set_l7droppacks(::google::protobuf::uint64 value);
  
  // optional uint64 L7ForwardPacks = 17;
  inline bool has_l7forwardpacks() const;
  inline void clear_l7forwardpacks();
  static const int kL7ForwardPacksFieldNumber = 17;
  inline ::google::protobuf::uint64 l7forwardpacks() const;
  inline void set_l7forwardpacks(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:msg.IpClean)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint64 inpacks_;
  ::google::protobuf::uint64 inbits_;
  ::google::protobuf::uint64 frdpacks_;
  ::google::protobuf::uint64 frdbits_;
  ::google::protobuf::uint64 droppacks_;
  ::google::protobuf::uint64 dropbits_;
  ::google::protobuf::uint64 httpreqs_;
  ::google::protobuf::uint64 httpconns_;
  ::google::protobuf::uint64 blackholebits_;
  ::google::protobuf::uint64 blackholepacks_;
  ::google::protobuf::uint64 tcpreplypacks_;
  ::google::protobuf::uint64 tcpacceptpacks_;
  ::google::protobuf::uint64 tcpdroppacks_;
  ::google::protobuf::uint64 tcpforwardpacks_;
  ::google::protobuf::uint64 l7droppacks_;
  ::google::protobuf::uint64 l7forwardpacks_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IpClean* default_instance_;
};
// -------------------------------------------------------------------

class DetectStats : public ::google::protobuf::Message {
 public:
  DetectStats();
  virtual ~DetectStats();
  
  DetectStats(const DetectStats& from);
  
  inline DetectStats& operator=(const DetectStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectStats& default_instance();
  
  void Swap(DetectStats* other);
  
  // implements Message ----------------------------------------------
  
  DetectStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DetectStats& from);
  void MergeFrom(const DetectStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 timeSeq = 1;
  inline bool has_timeseq() const;
  inline void clear_timeseq();
  static const int kTimeSeqFieldNumber = 1;
  inline ::google::protobuf::uint64 timeseq() const;
  inline void set_timeseq(::google::protobuf::uint64 value);
  
  // required uint32 timeUnit = 2;
  inline bool has_timeunit() const;
  inline void clear_timeunit();
  static const int kTimeUnitFieldNumber = 2;
  inline ::google::protobuf::uint32 timeunit() const;
  inline void set_timeunit(::google::protobuf::uint32 value);
  
  // repeated .msg.IpDetect stats = 3;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 3;
  inline const ::msg::IpDetect& stats(int index) const;
  inline ::msg::IpDetect* mutable_stats(int index);
  inline ::msg::IpDetect* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::IpDetect >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::IpDetect >*
      mutable_stats();
  
  // @@protoc_insertion_point(class_scope:msg.DetectStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 timeseq_;
  ::google::protobuf::uint32 timeunit_;
  ::google::protobuf::RepeatedPtrField< ::msg::IpDetect > stats_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DetectStats* default_instance_;
};
// -------------------------------------------------------------------

class CleanStats : public ::google::protobuf::Message {
 public:
  CleanStats();
  virtual ~CleanStats();
  
  CleanStats(const CleanStats& from);
  
  inline CleanStats& operator=(const CleanStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CleanStats& default_instance();
  
  void Swap(CleanStats* other);
  
  // implements Message ----------------------------------------------
  
  CleanStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CleanStats& from);
  void MergeFrom(const CleanStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 timeSeq = 1;
  inline bool has_timeseq() const;
  inline void clear_timeseq();
  static const int kTimeSeqFieldNumber = 1;
  inline ::google::protobuf::uint64 timeseq() const;
  inline void set_timeseq(::google::protobuf::uint64 value);
  
  // required uint32 timeUnit = 2;
  inline bool has_timeunit() const;
  inline void clear_timeunit();
  static const int kTimeUnitFieldNumber = 2;
  inline ::google::protobuf::uint32 timeunit() const;
  inline void set_timeunit(::google::protobuf::uint32 value);
  
  // repeated .msg.IpClean stats = 3;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 3;
  inline const ::msg::IpClean& stats(int index) const;
  inline ::msg::IpClean* mutable_stats(int index);
  inline ::msg::IpClean* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::IpClean >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::IpClean >*
      mutable_stats();
  
  // @@protoc_insertion_point(class_scope:msg.CleanStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 timeseq_;
  ::google::protobuf::uint32 timeunit_;
  ::google::protobuf::RepeatedPtrField< ::msg::IpClean > stats_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CleanStats* default_instance_;
};
// -------------------------------------------------------------------

class CCStat : public ::google::protobuf::Message {
 public:
  CCStat();
  virtual ~CCStat();
  
  CCStat(const CCStat& from);
  
  inline CCStat& operator=(const CCStat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCStat& default_instance();
  
  void Swap(CCStat* other);
  
  // implements Message ----------------------------------------------
  
  CCStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCStat& from);
  void MergeFrom(const CCStat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 dstIp = 1;
  inline bool has_dstip() const;
  inline void clear_dstip();
  static const int kDstIpFieldNumber = 1;
  inline ::google::protobuf::uint32 dstip() const;
  inline void set_dstip(::google::protobuf::uint32 value);
  
  // required uint32 srcIp = 2;
  inline bool has_srcip() const;
  inline void clear_srcip();
  static const int kSrcIpFieldNumber = 2;
  inline ::google::protobuf::uint32 srcip() const;
  inline void set_srcip(::google::protobuf::uint32 value);
  
  // required uint64 httpReqs = 3;
  inline bool has_httpreqs() const;
  inline void clear_httpreqs();
  static const int kHttpReqsFieldNumber = 3;
  inline ::google::protobuf::uint64 httpreqs() const;
  inline void set_httpreqs(::google::protobuf::uint64 value);
  
  // required uint64 httpConns = 4;
  inline bool has_httpconns() const;
  inline void clear_httpconns();
  static const int kHttpConnsFieldNumber = 4;
  inline ::google::protobuf::uint64 httpconns() const;
  inline void set_httpconns(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:msg.CCStat)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 dstip_;
  ::google::protobuf::uint32 srcip_;
  ::google::protobuf::uint64 httpreqs_;
  ::google::protobuf::uint64 httpconns_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCStat* default_instance_;
};
// -------------------------------------------------------------------

class CCStats : public ::google::protobuf::Message {
 public:
  CCStats();
  virtual ~CCStats();
  
  CCStats(const CCStats& from);
  
  inline CCStats& operator=(const CCStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CCStats& default_instance();
  
  void Swap(CCStats* other);
  
  // implements Message ----------------------------------------------
  
  CCStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCStats& from);
  void MergeFrom(const CCStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 timeSeq = 1;
  inline bool has_timeseq() const;
  inline void clear_timeseq();
  static const int kTimeSeqFieldNumber = 1;
  inline ::google::protobuf::uint64 timeseq() const;
  inline void set_timeseq(::google::protobuf::uint64 value);
  
  // required uint32 timeUnit = 2;
  inline bool has_timeunit() const;
  inline void clear_timeunit();
  static const int kTimeUnitFieldNumber = 2;
  inline ::google::protobuf::uint32 timeunit() const;
  inline void set_timeunit(::google::protobuf::uint32 value);
  
  // repeated .msg.CCStat stats = 3;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 3;
  inline const ::msg::CCStat& stats(int index) const;
  inline ::msg::CCStat* mutable_stats(int index);
  inline ::msg::CCStat* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::CCStat >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::CCStat >*
      mutable_stats();
  
  // @@protoc_insertion_point(class_scope:msg.CCStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 timeseq_;
  ::google::protobuf::uint32 timeunit_;
  ::google::protobuf::RepeatedPtrField< ::msg::CCStat > stats_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CCStats* default_instance_;
};
// -------------------------------------------------------------------

class ActionL4 : public ::google::protobuf::Message {
 public:
  ActionL4();
  virtual ~ActionL4();
  
  ActionL4(const ActionL4& from);
  
  inline ActionL4& operator=(const ActionL4& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionL4& default_instance();
  
  void Swap(ActionL4* other);
  
  // implements Message ----------------------------------------------
  
  ActionL4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionL4& from);
  void MergeFrom(const ActionL4& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // required uint32 expire = 2;
  inline bool has_expire() const;
  inline void clear_expire();
  static const int kExpireFieldNumber = 2;
  inline ::google::protobuf::uint32 expire() const;
  inline void set_expire(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:msg.ActionL4)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 expire_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ActionL4* default_instance_;
};
// -------------------------------------------------------------------

class ActionL7 : public ::google::protobuf::Message {
 public:
  ActionL7();
  virtual ~ActionL7();
  
  ActionL7(const ActionL7& from);
  
  inline ActionL7& operator=(const ActionL7& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionL7& default_instance();
  
  void Swap(ActionL7* other);
  
  // implements Message ----------------------------------------------
  
  ActionL7* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionL7& from);
  void MergeFrom(const ActionL7& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // required uint32 expire = 2;
  inline bool has_expire() const;
  inline void clear_expire();
  static const int kExpireFieldNumber = 2;
  inline ::google::protobuf::uint32 expire() const;
  inline void set_expire(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:msg.ActionL7)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 expire_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ActionL7* default_instance_;
};
// -------------------------------------------------------------------

class ActionBlackholeL4 : public ::google::protobuf::Message {
 public:
  ActionBlackholeL4();
  virtual ~ActionBlackholeL4();
  
  ActionBlackholeL4(const ActionBlackholeL4& from);
  
  inline ActionBlackholeL4& operator=(const ActionBlackholeL4& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionBlackholeL4& default_instance();
  
  void Swap(ActionBlackholeL4* other);
  
  // implements Message ----------------------------------------------
  
  ActionBlackholeL4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionBlackholeL4& from);
  void MergeFrom(const ActionBlackholeL4& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // required uint32 expire = 2;
  inline bool has_expire() const;
  inline void clear_expire();
  static const int kExpireFieldNumber = 2;
  inline ::google::protobuf::uint32 expire() const;
  inline void set_expire(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:msg.ActionBlackholeL4)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 expire_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ActionBlackholeL4* default_instance_;
};
// -------------------------------------------------------------------

class ActionBlackholeL7 : public ::google::protobuf::Message {
 public:
  ActionBlackholeL7();
  virtual ~ActionBlackholeL7();
  
  ActionBlackholeL7(const ActionBlackholeL7& from);
  
  inline ActionBlackholeL7& operator=(const ActionBlackholeL7& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionBlackholeL7& default_instance();
  
  void Swap(ActionBlackholeL7* other);
  
  // implements Message ----------------------------------------------
  
  ActionBlackholeL7* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionBlackholeL7& from);
  void MergeFrom(const ActionBlackholeL7& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 dstIp = 1;
  inline bool has_dstip() const;
  inline void clear_dstip();
  static const int kDstIpFieldNumber = 1;
  inline ::google::protobuf::uint32 dstip() const;
  inline void set_dstip(::google::protobuf::uint32 value);
  
  // required uint32 srcIp = 2;
  inline bool has_srcip() const;
  inline void clear_srcip();
  static const int kSrcIpFieldNumber = 2;
  inline ::google::protobuf::uint32 srcip() const;
  inline void set_srcip(::google::protobuf::uint32 value);
  
  // required uint32 expire = 3;
  inline bool has_expire() const;
  inline void clear_expire();
  static const int kExpireFieldNumber = 3;
  inline ::google::protobuf::uint32 expire() const;
  inline void set_expire(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:msg.ActionBlackholeL7)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 dstip_;
  ::google::protobuf::uint32 srcip_;
  ::google::protobuf::uint32 expire_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ActionBlackholeL7* default_instance_;
};
// -------------------------------------------------------------------

class Actions : public ::google::protobuf::Message {
 public:
  Actions();
  virtual ~Actions();
  
  Actions(const Actions& from);
  
  inline Actions& operator=(const Actions& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Actions& default_instance();
  
  void Swap(Actions* other);
  
  // implements Message ----------------------------------------------
  
  Actions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Actions& from);
  void MergeFrom(const Actions& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .msg.ActionL4 actionL4s = 1;
  inline int actionl4s_size() const;
  inline void clear_actionl4s();
  static const int kActionL4SFieldNumber = 1;
  inline const ::msg::ActionL4& actionl4s(int index) const;
  inline ::msg::ActionL4* mutable_actionl4s(int index);
  inline ::msg::ActionL4* add_actionl4s();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionL4 >&
      actionl4s() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::ActionL4 >*
      mutable_actionl4s();
  
  // repeated .msg.ActionL7 actionL7s = 2;
  inline int actionl7s_size() const;
  inline void clear_actionl7s();
  static const int kActionL7SFieldNumber = 2;
  inline const ::msg::ActionL7& actionl7s(int index) const;
  inline ::msg::ActionL7* mutable_actionl7s(int index);
  inline ::msg::ActionL7* add_actionl7s();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionL7 >&
      actionl7s() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::ActionL7 >*
      mutable_actionl7s();
  
  // repeated .msg.ActionBlackholeL4 actionBhL4s = 3;
  inline int actionbhl4s_size() const;
  inline void clear_actionbhl4s();
  static const int kActionBhL4SFieldNumber = 3;
  inline const ::msg::ActionBlackholeL4& actionbhl4s(int index) const;
  inline ::msg::ActionBlackholeL4* mutable_actionbhl4s(int index);
  inline ::msg::ActionBlackholeL4* add_actionbhl4s();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL4 >&
      actionbhl4s() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL4 >*
      mutable_actionbhl4s();
  
  // repeated .msg.ActionBlackholeL7 actionBhL7s = 4;
  inline int actionbhl7s_size() const;
  inline void clear_actionbhl7s();
  static const int kActionBhL7SFieldNumber = 4;
  inline const ::msg::ActionBlackholeL7& actionbhl7s(int index) const;
  inline ::msg::ActionBlackholeL7* mutable_actionbhl7s(int index);
  inline ::msg::ActionBlackholeL7* add_actionbhl7s();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL7 >&
      actionbhl7s() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL7 >*
      mutable_actionbhl7s();
  
  // @@protoc_insertion_point(class_scope:msg.Actions)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::msg::ActionL4 > actionl4s_;
  ::google::protobuf::RepeatedPtrField< ::msg::ActionL7 > actionl7s_;
  ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL4 > actionbhl4s_;
  ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL7 > actionbhl7s_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Actions* default_instance_;
};
// -------------------------------------------------------------------

class IpsReq : public ::google::protobuf::Message {
 public:
  IpsReq();
  virtual ~IpsReq();
  
  IpsReq(const IpsReq& from);
  
  inline IpsReq& operator=(const IpsReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IpsReq& default_instance();
  
  void Swap(IpsReq* other);
  
  // implements Message ----------------------------------------------
  
  IpsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IpsReq& from);
  void MergeFrom(const IpsReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:msg.IpsReq)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IpsReq* default_instance_;
};
// -------------------------------------------------------------------

class IpConf : public ::google::protobuf::Message {
 public:
  IpConf();
  virtual ~IpConf();
  
  IpConf(const IpConf& from);
  
  inline IpConf& operator=(const IpConf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IpConf& default_instance();
  
  void Swap(IpConf* other);
  
  // implements Message ----------------------------------------------
  
  IpConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IpConf& from);
  void MergeFrom(const IpConf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // required bool l7E = 2;
  inline bool has_l7e() const;
  inline void clear_l7e();
  static const int kL7EFieldNumber = 2;
  inline bool l7e() const;
  inline void set_l7e(bool value);
  
  // @@protoc_insertion_point(class_scope:msg.IpConf)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  bool l7e_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IpConf* default_instance_;
};
// -------------------------------------------------------------------

class IpsResp : public ::google::protobuf::Message {
 public:
  IpsResp();
  virtual ~IpsResp();
  
  IpsResp(const IpsResp& from);
  
  inline IpsResp& operator=(const IpsResp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IpsResp& default_instance();
  
  void Swap(IpsResp* other);
  
  // implements Message ----------------------------------------------
  
  IpsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IpsResp& from);
  void MergeFrom(const IpsResp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string dcc = 1;
  inline bool has_dcc() const;
  inline void clear_dcc();
  static const int kDccFieldNumber = 1;
  inline const ::std::string& dcc() const;
  inline void set_dcc(const ::std::string& value);
  inline void set_dcc(const char* value);
  inline void set_dcc(const char* value, size_t size);
  inline ::std::string* mutable_dcc();
  
  // repeated .msg.IpConf ips = 2;
  inline int ips_size() const;
  inline void clear_ips();
  static const int kIpsFieldNumber = 2;
  inline const ::msg::IpConf& ips(int index) const;
  inline ::msg::IpConf* mutable_ips(int index);
  inline ::msg::IpConf* add_ips();
  inline const ::google::protobuf::RepeatedPtrField< ::msg::IpConf >&
      ips() const;
  inline ::google::protobuf::RepeatedPtrField< ::msg::IpConf >*
      mutable_ips();
  
  // @@protoc_insertion_point(class_scope:msg.IpsResp)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* dcc_;
  static const ::std::string _default_dcc_;
  ::google::protobuf::RepeatedPtrField< ::msg::IpConf > ips_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IpsResp* default_instance_;
};
// ===================================================================


// ===================================================================

// IpDetect

// required uint32 ip = 1;
inline bool IpDetect::has_ip() const {
  return _has_bit(0);
}
inline void IpDetect::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 IpDetect::ip() const {
  return ip_;
}
inline void IpDetect::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// required uint64 inPacks = 2;
inline bool IpDetect::has_inpacks() const {
  return _has_bit(1);
}
inline void IpDetect::clear_inpacks() {
  inpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 IpDetect::inpacks() const {
  return inpacks_;
}
inline void IpDetect::set_inpacks(::google::protobuf::uint64 value) {
  _set_bit(1);
  inpacks_ = value;
}

// required uint64 inBits = 3;
inline bool IpDetect::has_inbits() const {
  return _has_bit(2);
}
inline void IpDetect::clear_inbits() {
  inbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 IpDetect::inbits() const {
  return inbits_;
}
inline void IpDetect::set_inbits(::google::protobuf::uint64 value) {
  _set_bit(2);
  inbits_ = value;
}

// required uint64 outPacks = 4;
inline bool IpDetect::has_outpacks() const {
  return _has_bit(3);
}
inline void IpDetect::clear_outpacks() {
  outpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 IpDetect::outpacks() const {
  return outpacks_;
}
inline void IpDetect::set_outpacks(::google::protobuf::uint64 value) {
  _set_bit(3);
  outpacks_ = value;
}

// required uint64 outBits = 5;
inline bool IpDetect::has_outbits() const {
  return _has_bit(4);
}
inline void IpDetect::clear_outbits() {
  outbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 IpDetect::outbits() const {
  return outbits_;
}
inline void IpDetect::set_outbits(::google::protobuf::uint64 value) {
  _set_bit(4);
  outbits_ = value;
}

// required uint64 fragments = 6;
inline bool IpDetect::has_fragments() const {
  return _has_bit(5);
}
inline void IpDetect::clear_fragments() {
  fragments_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 IpDetect::fragments() const {
  return fragments_;
}
inline void IpDetect::set_fragments(::google::protobuf::uint64 value) {
  _set_bit(5);
  fragments_ = value;
}

// required uint64 wLens = 7;
inline bool IpDetect::has_wlens() const {
  return _has_bit(6);
}
inline void IpDetect::clear_wlens() {
  wlens_ = GOOGLE_ULONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::uint64 IpDetect::wlens() const {
  return wlens_;
}
inline void IpDetect::set_wlens(::google::protobuf::uint64 value) {
  _set_bit(6);
  wlens_ = value;
}

// required uint64 wFlags = 8;
inline bool IpDetect::has_wflags() const {
  return _has_bit(7);
}
inline void IpDetect::clear_wflags() {
  wflags_ = GOOGLE_ULONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::uint64 IpDetect::wflags() const {
  return wflags_;
}
inline void IpDetect::set_wflags(::google::protobuf::uint64 value) {
  _set_bit(7);
  wflags_ = value;
}

// required uint64 wSips = 9;
inline bool IpDetect::has_wsips() const {
  return _has_bit(8);
}
inline void IpDetect::clear_wsips() {
  wsips_ = GOOGLE_ULONGLONG(0);
  _clear_bit(8);
}
inline ::google::protobuf::uint64 IpDetect::wsips() const {
  return wsips_;
}
inline void IpDetect::set_wsips(::google::protobuf::uint64 value) {
  _set_bit(8);
  wsips_ = value;
}

// required uint64 tcpInPacks = 10;
inline bool IpDetect::has_tcpinpacks() const {
  return _has_bit(9);
}
inline void IpDetect::clear_tcpinpacks() {
  tcpinpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::uint64 IpDetect::tcpinpacks() const {
  return tcpinpacks_;
}
inline void IpDetect::set_tcpinpacks(::google::protobuf::uint64 value) {
  _set_bit(9);
  tcpinpacks_ = value;
}

// required uint64 tcpOutPacks = 11;
inline bool IpDetect::has_tcpoutpacks() const {
  return _has_bit(10);
}
inline void IpDetect::clear_tcpoutpacks() {
  tcpoutpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(10);
}
inline ::google::protobuf::uint64 IpDetect::tcpoutpacks() const {
  return tcpoutpacks_;
}
inline void IpDetect::set_tcpoutpacks(::google::protobuf::uint64 value) {
  _set_bit(10);
  tcpoutpacks_ = value;
}

// required uint64 tcpInBits = 12;
inline bool IpDetect::has_tcpinbits() const {
  return _has_bit(11);
}
inline void IpDetect::clear_tcpinbits() {
  tcpinbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(11);
}
inline ::google::protobuf::uint64 IpDetect::tcpinbits() const {
  return tcpinbits_;
}
inline void IpDetect::set_tcpinbits(::google::protobuf::uint64 value) {
  _set_bit(11);
  tcpinbits_ = value;
}

// required uint64 tcpOutBits = 13;
inline bool IpDetect::has_tcpoutbits() const {
  return _has_bit(12);
}
inline void IpDetect::clear_tcpoutbits() {
  tcpoutbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(12);
}
inline ::google::protobuf::uint64 IpDetect::tcpoutbits() const {
  return tcpoutbits_;
}
inline void IpDetect::set_tcpoutbits(::google::protobuf::uint64 value) {
  _set_bit(12);
  tcpoutbits_ = value;
}

// required uint64 tcpInSyns = 14;
inline bool IpDetect::has_tcpinsyns() const {
  return _has_bit(13);
}
inline void IpDetect::clear_tcpinsyns() {
  tcpinsyns_ = GOOGLE_ULONGLONG(0);
  _clear_bit(13);
}
inline ::google::protobuf::uint64 IpDetect::tcpinsyns() const {
  return tcpinsyns_;
}
inline void IpDetect::set_tcpinsyns(::google::protobuf::uint64 value) {
  _set_bit(13);
  tcpinsyns_ = value;
}

// required uint64 tcpOutSyns = 15;
inline bool IpDetect::has_tcpoutsyns() const {
  return _has_bit(14);
}
inline void IpDetect::clear_tcpoutsyns() {
  tcpoutsyns_ = GOOGLE_ULONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::uint64 IpDetect::tcpoutsyns() const {
  return tcpoutsyns_;
}
inline void IpDetect::set_tcpoutsyns(::google::protobuf::uint64 value) {
  _set_bit(14);
  tcpoutsyns_ = value;
}

// required uint64 tcpInAcks = 16;
inline bool IpDetect::has_tcpinacks() const {
  return _has_bit(15);
}
inline void IpDetect::clear_tcpinacks() {
  tcpinacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(15);
}
inline ::google::protobuf::uint64 IpDetect::tcpinacks() const {
  return tcpinacks_;
}
inline void IpDetect::set_tcpinacks(::google::protobuf::uint64 value) {
  _set_bit(15);
  tcpinacks_ = value;
}

// required uint64 tcpOutAcks = 17;
inline bool IpDetect::has_tcpoutacks() const {
  return _has_bit(16);
}
inline void IpDetect::clear_tcpoutacks() {
  tcpoutacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(16);
}
inline ::google::protobuf::uint64 IpDetect::tcpoutacks() const {
  return tcpoutacks_;
}
inline void IpDetect::set_tcpoutacks(::google::protobuf::uint64 value) {
  _set_bit(16);
  tcpoutacks_ = value;
}

// required uint64 tcpInFins = 18;
inline bool IpDetect::has_tcpinfins() const {
  return _has_bit(17);
}
inline void IpDetect::clear_tcpinfins() {
  tcpinfins_ = GOOGLE_ULONGLONG(0);
  _clear_bit(17);
}
inline ::google::protobuf::uint64 IpDetect::tcpinfins() const {
  return tcpinfins_;
}
inline void IpDetect::set_tcpinfins(::google::protobuf::uint64 value) {
  _set_bit(17);
  tcpinfins_ = value;
}

// required uint64 tcpOutFins = 19;
inline bool IpDetect::has_tcpoutfins() const {
  return _has_bit(18);
}
inline void IpDetect::clear_tcpoutfins() {
  tcpoutfins_ = GOOGLE_ULONGLONG(0);
  _clear_bit(18);
}
inline ::google::protobuf::uint64 IpDetect::tcpoutfins() const {
  return tcpoutfins_;
}
inline void IpDetect::set_tcpoutfins(::google::protobuf::uint64 value) {
  _set_bit(18);
  tcpoutfins_ = value;
}

// required uint64 tcpInRsts = 20;
inline bool IpDetect::has_tcpinrsts() const {
  return _has_bit(19);
}
inline void IpDetect::clear_tcpinrsts() {
  tcpinrsts_ = GOOGLE_ULONGLONG(0);
  _clear_bit(19);
}
inline ::google::protobuf::uint64 IpDetect::tcpinrsts() const {
  return tcpinrsts_;
}
inline void IpDetect::set_tcpinrsts(::google::protobuf::uint64 value) {
  _set_bit(19);
  tcpinrsts_ = value;
}

// required uint64 tcpOutRsts = 21;
inline bool IpDetect::has_tcpoutrsts() const {
  return _has_bit(20);
}
inline void IpDetect::clear_tcpoutrsts() {
  tcpoutrsts_ = GOOGLE_ULONGLONG(0);
  _clear_bit(20);
}
inline ::google::protobuf::uint64 IpDetect::tcpoutrsts() const {
  return tcpoutrsts_;
}
inline void IpDetect::set_tcpoutrsts(::google::protobuf::uint64 value) {
  _set_bit(20);
  tcpoutrsts_ = value;
}

// required uint64 udpInPacks = 22;
inline bool IpDetect::has_udpinpacks() const {
  return _has_bit(21);
}
inline void IpDetect::clear_udpinpacks() {
  udpinpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(21);
}
inline ::google::protobuf::uint64 IpDetect::udpinpacks() const {
  return udpinpacks_;
}
inline void IpDetect::set_udpinpacks(::google::protobuf::uint64 value) {
  _set_bit(21);
  udpinpacks_ = value;
}

// required uint64 udpOutPacks = 23;
inline bool IpDetect::has_udpoutpacks() const {
  return _has_bit(22);
}
inline void IpDetect::clear_udpoutpacks() {
  udpoutpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(22);
}
inline ::google::protobuf::uint64 IpDetect::udpoutpacks() const {
  return udpoutpacks_;
}
inline void IpDetect::set_udpoutpacks(::google::protobuf::uint64 value) {
  _set_bit(22);
  udpoutpacks_ = value;
}

// required uint64 udpInBits = 24;
inline bool IpDetect::has_udpinbits() const {
  return _has_bit(23);
}
inline void IpDetect::clear_udpinbits() {
  udpinbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(23);
}
inline ::google::protobuf::uint64 IpDetect::udpinbits() const {
  return udpinbits_;
}
inline void IpDetect::set_udpinbits(::google::protobuf::uint64 value) {
  _set_bit(23);
  udpinbits_ = value;
}

// required uint64 udpOutBits = 25;
inline bool IpDetect::has_udpoutbits() const {
  return _has_bit(24);
}
inline void IpDetect::clear_udpoutbits() {
  udpoutbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(24);
}
inline ::google::protobuf::uint64 IpDetect::udpoutbits() const {
  return udpoutbits_;
}
inline void IpDetect::set_udpoutbits(::google::protobuf::uint64 value) {
  _set_bit(24);
  udpoutbits_ = value;
}

// required uint64 icmpInPacks = 26;
inline bool IpDetect::has_icmpinpacks() const {
  return _has_bit(25);
}
inline void IpDetect::clear_icmpinpacks() {
  icmpinpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(25);
}
inline ::google::protobuf::uint64 IpDetect::icmpinpacks() const {
  return icmpinpacks_;
}
inline void IpDetect::set_icmpinpacks(::google::protobuf::uint64 value) {
  _set_bit(25);
  icmpinpacks_ = value;
}

// required uint64 icmpOutPacks = 27;
inline bool IpDetect::has_icmpoutpacks() const {
  return _has_bit(26);
}
inline void IpDetect::clear_icmpoutpacks() {
  icmpoutpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(26);
}
inline ::google::protobuf::uint64 IpDetect::icmpoutpacks() const {
  return icmpoutpacks_;
}
inline void IpDetect::set_icmpoutpacks(::google::protobuf::uint64 value) {
  _set_bit(26);
  icmpoutpacks_ = value;
}

// required uint64 icmpInBits = 28;
inline bool IpDetect::has_icmpinbits() const {
  return _has_bit(27);
}
inline void IpDetect::clear_icmpinbits() {
  icmpinbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(27);
}
inline ::google::protobuf::uint64 IpDetect::icmpinbits() const {
  return icmpinbits_;
}
inline void IpDetect::set_icmpinbits(::google::protobuf::uint64 value) {
  _set_bit(27);
  icmpinbits_ = value;
}

// required uint64 icmpOutBits = 29;
inline bool IpDetect::has_icmpoutbits() const {
  return _has_bit(28);
}
inline void IpDetect::clear_icmpoutbits() {
  icmpoutbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(28);
}
inline ::google::protobuf::uint64 IpDetect::icmpoutbits() const {
  return icmpoutbits_;
}
inline void IpDetect::set_icmpoutbits(::google::protobuf::uint64 value) {
  _set_bit(28);
  icmpoutbits_ = value;
}

// required uint64 igmpInPacks = 30;
inline bool IpDetect::has_igmpinpacks() const {
  return _has_bit(29);
}
inline void IpDetect::clear_igmpinpacks() {
  igmpinpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(29);
}
inline ::google::protobuf::uint64 IpDetect::igmpinpacks() const {
  return igmpinpacks_;
}
inline void IpDetect::set_igmpinpacks(::google::protobuf::uint64 value) {
  _set_bit(29);
  igmpinpacks_ = value;
}

// required uint64 igmpOutPacks = 31;
inline bool IpDetect::has_igmpoutpacks() const {
  return _has_bit(30);
}
inline void IpDetect::clear_igmpoutpacks() {
  igmpoutpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(30);
}
inline ::google::protobuf::uint64 IpDetect::igmpoutpacks() const {
  return igmpoutpacks_;
}
inline void IpDetect::set_igmpoutpacks(::google::protobuf::uint64 value) {
  _set_bit(30);
  igmpoutpacks_ = value;
}

// required uint64 igmpInBits = 32;
inline bool IpDetect::has_igmpinbits() const {
  return _has_bit(31);
}
inline void IpDetect::clear_igmpinbits() {
  igmpinbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(31);
}
inline ::google::protobuf::uint64 IpDetect::igmpinbits() const {
  return igmpinbits_;
}
inline void IpDetect::set_igmpinbits(::google::protobuf::uint64 value) {
  _set_bit(31);
  igmpinbits_ = value;
}

// required uint64 igmpOutBits = 33;
inline bool IpDetect::has_igmpoutbits() const {
  return _has_bit(32);
}
inline void IpDetect::clear_igmpoutbits() {
  igmpoutbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(32);
}
inline ::google::protobuf::uint64 IpDetect::igmpoutbits() const {
  return igmpoutbits_;
}
inline void IpDetect::set_igmpoutbits(::google::protobuf::uint64 value) {
  _set_bit(32);
  igmpoutbits_ = value;
}

// required uint64 httpReqs = 34;
inline bool IpDetect::has_httpreqs() const {
  return _has_bit(33);
}
inline void IpDetect::clear_httpreqs() {
  httpreqs_ = GOOGLE_ULONGLONG(0);
  _clear_bit(33);
}
inline ::google::protobuf::uint64 IpDetect::httpreqs() const {
  return httpreqs_;
}
inline void IpDetect::set_httpreqs(::google::protobuf::uint64 value) {
  _set_bit(33);
  httpreqs_ = value;
}

// required uint64 httpConns = 35;
inline bool IpDetect::has_httpconns() const {
  return _has_bit(34);
}
inline void IpDetect::clear_httpconns() {
  httpconns_ = GOOGLE_ULONGLONG(0);
  _clear_bit(34);
}
inline ::google::protobuf::uint64 IpDetect::httpconns() const {
  return httpconns_;
}
inline void IpDetect::set_httpconns(::google::protobuf::uint64 value) {
  _set_bit(34);
  httpconns_ = value;
}

// required uint64 httpGets = 36;
inline bool IpDetect::has_httpgets() const {
  return _has_bit(35);
}
inline void IpDetect::clear_httpgets() {
  httpgets_ = GOOGLE_ULONGLONG(0);
  _clear_bit(35);
}
inline ::google::protobuf::uint64 IpDetect::httpgets() const {
  return httpgets_;
}
inline void IpDetect::set_httpgets(::google::protobuf::uint64 value) {
  _set_bit(35);
  httpgets_ = value;
}

// required uint64 httpPosts = 37;
inline bool IpDetect::has_httpposts() const {
  return _has_bit(36);
}
inline void IpDetect::clear_httpposts() {
  httpposts_ = GOOGLE_ULONGLONG(0);
  _clear_bit(36);
}
inline ::google::protobuf::uint64 IpDetect::httpposts() const {
  return httpposts_;
}
inline void IpDetect::set_httpposts(::google::protobuf::uint64 value) {
  _set_bit(36);
  httpposts_ = value;
}

// required uint64 httpPuts = 38;
inline bool IpDetect::has_httpputs() const {
  return _has_bit(37);
}
inline void IpDetect::clear_httpputs() {
  httpputs_ = GOOGLE_ULONGLONG(0);
  _clear_bit(37);
}
inline ::google::protobuf::uint64 IpDetect::httpputs() const {
  return httpputs_;
}
inline void IpDetect::set_httpputs(::google::protobuf::uint64 value) {
  _set_bit(37);
  httpputs_ = value;
}

// -------------------------------------------------------------------

// IpClean

// required uint32 ip = 1;
inline bool IpClean::has_ip() const {
  return _has_bit(0);
}
inline void IpClean::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 IpClean::ip() const {
  return ip_;
}
inline void IpClean::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// required uint64 inPacks = 2;
inline bool IpClean::has_inpacks() const {
  return _has_bit(1);
}
inline void IpClean::clear_inpacks() {
  inpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 IpClean::inpacks() const {
  return inpacks_;
}
inline void IpClean::set_inpacks(::google::protobuf::uint64 value) {
  _set_bit(1);
  inpacks_ = value;
}

// required uint64 inBits = 3;
inline bool IpClean::has_inbits() const {
  return _has_bit(2);
}
inline void IpClean::clear_inbits() {
  inbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 IpClean::inbits() const {
  return inbits_;
}
inline void IpClean::set_inbits(::google::protobuf::uint64 value) {
  _set_bit(2);
  inbits_ = value;
}

// required uint64 frdPacks = 4;
inline bool IpClean::has_frdpacks() const {
  return _has_bit(3);
}
inline void IpClean::clear_frdpacks() {
  frdpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 IpClean::frdpacks() const {
  return frdpacks_;
}
inline void IpClean::set_frdpacks(::google::protobuf::uint64 value) {
  _set_bit(3);
  frdpacks_ = value;
}

// required uint64 frdBits = 5;
inline bool IpClean::has_frdbits() const {
  return _has_bit(4);
}
inline void IpClean::clear_frdbits() {
  frdbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 IpClean::frdbits() const {
  return frdbits_;
}
inline void IpClean::set_frdbits(::google::protobuf::uint64 value) {
  _set_bit(4);
  frdbits_ = value;
}

// required uint64 dropPacks = 6;
inline bool IpClean::has_droppacks() const {
  return _has_bit(5);
}
inline void IpClean::clear_droppacks() {
  droppacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 IpClean::droppacks() const {
  return droppacks_;
}
inline void IpClean::set_droppacks(::google::protobuf::uint64 value) {
  _set_bit(5);
  droppacks_ = value;
}

// required uint64 dropBits = 7;
inline bool IpClean::has_dropbits() const {
  return _has_bit(6);
}
inline void IpClean::clear_dropbits() {
  dropbits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::uint64 IpClean::dropbits() const {
  return dropbits_;
}
inline void IpClean::set_dropbits(::google::protobuf::uint64 value) {
  _set_bit(6);
  dropbits_ = value;
}

// required uint64 httpReqs = 8;
inline bool IpClean::has_httpreqs() const {
  return _has_bit(7);
}
inline void IpClean::clear_httpreqs() {
  httpreqs_ = GOOGLE_ULONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::uint64 IpClean::httpreqs() const {
  return httpreqs_;
}
inline void IpClean::set_httpreqs(::google::protobuf::uint64 value) {
  _set_bit(7);
  httpreqs_ = value;
}

// required uint64 httpConns = 9;
inline bool IpClean::has_httpconns() const {
  return _has_bit(8);
}
inline void IpClean::clear_httpconns() {
  httpconns_ = GOOGLE_ULONGLONG(0);
  _clear_bit(8);
}
inline ::google::protobuf::uint64 IpClean::httpconns() const {
  return httpconns_;
}
inline void IpClean::set_httpconns(::google::protobuf::uint64 value) {
  _set_bit(8);
  httpconns_ = value;
}

// optional uint64 blackholeBits = 10;
inline bool IpClean::has_blackholebits() const {
  return _has_bit(9);
}
inline void IpClean::clear_blackholebits() {
  blackholebits_ = GOOGLE_ULONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::uint64 IpClean::blackholebits() const {
  return blackholebits_;
}
inline void IpClean::set_blackholebits(::google::protobuf::uint64 value) {
  _set_bit(9);
  blackholebits_ = value;
}

// optional uint64 blackholePacks = 11;
inline bool IpClean::has_blackholepacks() const {
  return _has_bit(10);
}
inline void IpClean::clear_blackholepacks() {
  blackholepacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(10);
}
inline ::google::protobuf::uint64 IpClean::blackholepacks() const {
  return blackholepacks_;
}
inline void IpClean::set_blackholepacks(::google::protobuf::uint64 value) {
  _set_bit(10);
  blackholepacks_ = value;
}

// optional uint64 TcpReplyPacks = 12;
inline bool IpClean::has_tcpreplypacks() const {
  return _has_bit(11);
}
inline void IpClean::clear_tcpreplypacks() {
  tcpreplypacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(11);
}
inline ::google::protobuf::uint64 IpClean::tcpreplypacks() const {
  return tcpreplypacks_;
}
inline void IpClean::set_tcpreplypacks(::google::protobuf::uint64 value) {
  _set_bit(11);
  tcpreplypacks_ = value;
}

// optional uint64 TcpAcceptPacks = 13;
inline bool IpClean::has_tcpacceptpacks() const {
  return _has_bit(12);
}
inline void IpClean::clear_tcpacceptpacks() {
  tcpacceptpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(12);
}
inline ::google::protobuf::uint64 IpClean::tcpacceptpacks() const {
  return tcpacceptpacks_;
}
inline void IpClean::set_tcpacceptpacks(::google::protobuf::uint64 value) {
  _set_bit(12);
  tcpacceptpacks_ = value;
}

// optional uint64 TcpDropPacks = 14;
inline bool IpClean::has_tcpdroppacks() const {
  return _has_bit(13);
}
inline void IpClean::clear_tcpdroppacks() {
  tcpdroppacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(13);
}
inline ::google::protobuf::uint64 IpClean::tcpdroppacks() const {
  return tcpdroppacks_;
}
inline void IpClean::set_tcpdroppacks(::google::protobuf::uint64 value) {
  _set_bit(13);
  tcpdroppacks_ = value;
}

// optional uint64 TcpForwardPacks = 15;
inline bool IpClean::has_tcpforwardpacks() const {
  return _has_bit(14);
}
inline void IpClean::clear_tcpforwardpacks() {
  tcpforwardpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::uint64 IpClean::tcpforwardpacks() const {
  return tcpforwardpacks_;
}
inline void IpClean::set_tcpforwardpacks(::google::protobuf::uint64 value) {
  _set_bit(14);
  tcpforwardpacks_ = value;
}

// optional uint64 L7DropPacks = 16;
inline bool IpClean::has_l7droppacks() const {
  return _has_bit(15);
}
inline void IpClean::clear_l7droppacks() {
  l7droppacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(15);
}
inline ::google::protobuf::uint64 IpClean::l7droppacks() const {
  return l7droppacks_;
}
inline void IpClean::set_l7droppacks(::google::protobuf::uint64 value) {
  _set_bit(15);
  l7droppacks_ = value;
}

// optional uint64 L7ForwardPacks = 17;
inline bool IpClean::has_l7forwardpacks() const {
  return _has_bit(16);
}
inline void IpClean::clear_l7forwardpacks() {
  l7forwardpacks_ = GOOGLE_ULONGLONG(0);
  _clear_bit(16);
}
inline ::google::protobuf::uint64 IpClean::l7forwardpacks() const {
  return l7forwardpacks_;
}
inline void IpClean::set_l7forwardpacks(::google::protobuf::uint64 value) {
  _set_bit(16);
  l7forwardpacks_ = value;
}

// -------------------------------------------------------------------

// DetectStats

// required uint64 timeSeq = 1;
inline bool DetectStats::has_timeseq() const {
  return _has_bit(0);
}
inline void DetectStats::clear_timeseq() {
  timeseq_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 DetectStats::timeseq() const {
  return timeseq_;
}
inline void DetectStats::set_timeseq(::google::protobuf::uint64 value) {
  _set_bit(0);
  timeseq_ = value;
}

// required uint32 timeUnit = 2;
inline bool DetectStats::has_timeunit() const {
  return _has_bit(1);
}
inline void DetectStats::clear_timeunit() {
  timeunit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 DetectStats::timeunit() const {
  return timeunit_;
}
inline void DetectStats::set_timeunit(::google::protobuf::uint32 value) {
  _set_bit(1);
  timeunit_ = value;
}

// repeated .msg.IpDetect stats = 3;
inline int DetectStats::stats_size() const {
  return stats_.size();
}
inline void DetectStats::clear_stats() {
  stats_.Clear();
}
inline const ::msg::IpDetect& DetectStats::stats(int index) const {
  return stats_.Get(index);
}
inline ::msg::IpDetect* DetectStats::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::msg::IpDetect* DetectStats::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::IpDetect >&
DetectStats::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::IpDetect >*
DetectStats::mutable_stats() {
  return &stats_;
}

// -------------------------------------------------------------------

// CleanStats

// required uint64 timeSeq = 1;
inline bool CleanStats::has_timeseq() const {
  return _has_bit(0);
}
inline void CleanStats::clear_timeseq() {
  timeseq_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CleanStats::timeseq() const {
  return timeseq_;
}
inline void CleanStats::set_timeseq(::google::protobuf::uint64 value) {
  _set_bit(0);
  timeseq_ = value;
}

// required uint32 timeUnit = 2;
inline bool CleanStats::has_timeunit() const {
  return _has_bit(1);
}
inline void CleanStats::clear_timeunit() {
  timeunit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CleanStats::timeunit() const {
  return timeunit_;
}
inline void CleanStats::set_timeunit(::google::protobuf::uint32 value) {
  _set_bit(1);
  timeunit_ = value;
}

// repeated .msg.IpClean stats = 3;
inline int CleanStats::stats_size() const {
  return stats_.size();
}
inline void CleanStats::clear_stats() {
  stats_.Clear();
}
inline const ::msg::IpClean& CleanStats::stats(int index) const {
  return stats_.Get(index);
}
inline ::msg::IpClean* CleanStats::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::msg::IpClean* CleanStats::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::IpClean >&
CleanStats::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::IpClean >*
CleanStats::mutable_stats() {
  return &stats_;
}

// -------------------------------------------------------------------

// CCStat

// required uint32 dstIp = 1;
inline bool CCStat::has_dstip() const {
  return _has_bit(0);
}
inline void CCStat::clear_dstip() {
  dstip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CCStat::dstip() const {
  return dstip_;
}
inline void CCStat::set_dstip(::google::protobuf::uint32 value) {
  _set_bit(0);
  dstip_ = value;
}

// required uint32 srcIp = 2;
inline bool CCStat::has_srcip() const {
  return _has_bit(1);
}
inline void CCStat::clear_srcip() {
  srcip_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CCStat::srcip() const {
  return srcip_;
}
inline void CCStat::set_srcip(::google::protobuf::uint32 value) {
  _set_bit(1);
  srcip_ = value;
}

// required uint64 httpReqs = 3;
inline bool CCStat::has_httpreqs() const {
  return _has_bit(2);
}
inline void CCStat::clear_httpreqs() {
  httpreqs_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CCStat::httpreqs() const {
  return httpreqs_;
}
inline void CCStat::set_httpreqs(::google::protobuf::uint64 value) {
  _set_bit(2);
  httpreqs_ = value;
}

// required uint64 httpConns = 4;
inline bool CCStat::has_httpconns() const {
  return _has_bit(3);
}
inline void CCStat::clear_httpconns() {
  httpconns_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CCStat::httpconns() const {
  return httpconns_;
}
inline void CCStat::set_httpconns(::google::protobuf::uint64 value) {
  _set_bit(3);
  httpconns_ = value;
}

// -------------------------------------------------------------------

// CCStats

// required uint64 timeSeq = 1;
inline bool CCStats::has_timeseq() const {
  return _has_bit(0);
}
inline void CCStats::clear_timeseq() {
  timeseq_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CCStats::timeseq() const {
  return timeseq_;
}
inline void CCStats::set_timeseq(::google::protobuf::uint64 value) {
  _set_bit(0);
  timeseq_ = value;
}

// required uint32 timeUnit = 2;
inline bool CCStats::has_timeunit() const {
  return _has_bit(1);
}
inline void CCStats::clear_timeunit() {
  timeunit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CCStats::timeunit() const {
  return timeunit_;
}
inline void CCStats::set_timeunit(::google::protobuf::uint32 value) {
  _set_bit(1);
  timeunit_ = value;
}

// repeated .msg.CCStat stats = 3;
inline int CCStats::stats_size() const {
  return stats_.size();
}
inline void CCStats::clear_stats() {
  stats_.Clear();
}
inline const ::msg::CCStat& CCStats::stats(int index) const {
  return stats_.Get(index);
}
inline ::msg::CCStat* CCStats::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::msg::CCStat* CCStats::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::CCStat >&
CCStats::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::CCStat >*
CCStats::mutable_stats() {
  return &stats_;
}

// -------------------------------------------------------------------

// ActionL4

// required uint32 ip = 1;
inline bool ActionL4::has_ip() const {
  return _has_bit(0);
}
inline void ActionL4::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ActionL4::ip() const {
  return ip_;
}
inline void ActionL4::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// required uint32 expire = 2;
inline bool ActionL4::has_expire() const {
  return _has_bit(1);
}
inline void ActionL4::clear_expire() {
  expire_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ActionL4::expire() const {
  return expire_;
}
inline void ActionL4::set_expire(::google::protobuf::uint32 value) {
  _set_bit(1);
  expire_ = value;
}

// -------------------------------------------------------------------

// ActionL7

// required uint32 ip = 1;
inline bool ActionL7::has_ip() const {
  return _has_bit(0);
}
inline void ActionL7::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ActionL7::ip() const {
  return ip_;
}
inline void ActionL7::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// required uint32 expire = 2;
inline bool ActionL7::has_expire() const {
  return _has_bit(1);
}
inline void ActionL7::clear_expire() {
  expire_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ActionL7::expire() const {
  return expire_;
}
inline void ActionL7::set_expire(::google::protobuf::uint32 value) {
  _set_bit(1);
  expire_ = value;
}

// -------------------------------------------------------------------

// ActionBlackholeL4

// required uint32 ip = 1;
inline bool ActionBlackholeL4::has_ip() const {
  return _has_bit(0);
}
inline void ActionBlackholeL4::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ActionBlackholeL4::ip() const {
  return ip_;
}
inline void ActionBlackholeL4::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// required uint32 expire = 2;
inline bool ActionBlackholeL4::has_expire() const {
  return _has_bit(1);
}
inline void ActionBlackholeL4::clear_expire() {
  expire_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ActionBlackholeL4::expire() const {
  return expire_;
}
inline void ActionBlackholeL4::set_expire(::google::protobuf::uint32 value) {
  _set_bit(1);
  expire_ = value;
}

// -------------------------------------------------------------------

// ActionBlackholeL7

// required uint32 dstIp = 1;
inline bool ActionBlackholeL7::has_dstip() const {
  return _has_bit(0);
}
inline void ActionBlackholeL7::clear_dstip() {
  dstip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ActionBlackholeL7::dstip() const {
  return dstip_;
}
inline void ActionBlackholeL7::set_dstip(::google::protobuf::uint32 value) {
  _set_bit(0);
  dstip_ = value;
}

// required uint32 srcIp = 2;
inline bool ActionBlackholeL7::has_srcip() const {
  return _has_bit(1);
}
inline void ActionBlackholeL7::clear_srcip() {
  srcip_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ActionBlackholeL7::srcip() const {
  return srcip_;
}
inline void ActionBlackholeL7::set_srcip(::google::protobuf::uint32 value) {
  _set_bit(1);
  srcip_ = value;
}

// required uint32 expire = 3;
inline bool ActionBlackholeL7::has_expire() const {
  return _has_bit(2);
}
inline void ActionBlackholeL7::clear_expire() {
  expire_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 ActionBlackholeL7::expire() const {
  return expire_;
}
inline void ActionBlackholeL7::set_expire(::google::protobuf::uint32 value) {
  _set_bit(2);
  expire_ = value;
}

// -------------------------------------------------------------------

// Actions

// repeated .msg.ActionL4 actionL4s = 1;
inline int Actions::actionl4s_size() const {
  return actionl4s_.size();
}
inline void Actions::clear_actionl4s() {
  actionl4s_.Clear();
}
inline const ::msg::ActionL4& Actions::actionl4s(int index) const {
  return actionl4s_.Get(index);
}
inline ::msg::ActionL4* Actions::mutable_actionl4s(int index) {
  return actionl4s_.Mutable(index);
}
inline ::msg::ActionL4* Actions::add_actionl4s() {
  return actionl4s_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionL4 >&
Actions::actionl4s() const {
  return actionl4s_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::ActionL4 >*
Actions::mutable_actionl4s() {
  return &actionl4s_;
}

// repeated .msg.ActionL7 actionL7s = 2;
inline int Actions::actionl7s_size() const {
  return actionl7s_.size();
}
inline void Actions::clear_actionl7s() {
  actionl7s_.Clear();
}
inline const ::msg::ActionL7& Actions::actionl7s(int index) const {
  return actionl7s_.Get(index);
}
inline ::msg::ActionL7* Actions::mutable_actionl7s(int index) {
  return actionl7s_.Mutable(index);
}
inline ::msg::ActionL7* Actions::add_actionl7s() {
  return actionl7s_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionL7 >&
Actions::actionl7s() const {
  return actionl7s_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::ActionL7 >*
Actions::mutable_actionl7s() {
  return &actionl7s_;
}

// repeated .msg.ActionBlackholeL4 actionBhL4s = 3;
inline int Actions::actionbhl4s_size() const {
  return actionbhl4s_.size();
}
inline void Actions::clear_actionbhl4s() {
  actionbhl4s_.Clear();
}
inline const ::msg::ActionBlackholeL4& Actions::actionbhl4s(int index) const {
  return actionbhl4s_.Get(index);
}
inline ::msg::ActionBlackholeL4* Actions::mutable_actionbhl4s(int index) {
  return actionbhl4s_.Mutable(index);
}
inline ::msg::ActionBlackholeL4* Actions::add_actionbhl4s() {
  return actionbhl4s_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL4 >&
Actions::actionbhl4s() const {
  return actionbhl4s_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL4 >*
Actions::mutable_actionbhl4s() {
  return &actionbhl4s_;
}

// repeated .msg.ActionBlackholeL7 actionBhL7s = 4;
inline int Actions::actionbhl7s_size() const {
  return actionbhl7s_.size();
}
inline void Actions::clear_actionbhl7s() {
  actionbhl7s_.Clear();
}
inline const ::msg::ActionBlackholeL7& Actions::actionbhl7s(int index) const {
  return actionbhl7s_.Get(index);
}
inline ::msg::ActionBlackholeL7* Actions::mutable_actionbhl7s(int index) {
  return actionbhl7s_.Mutable(index);
}
inline ::msg::ActionBlackholeL7* Actions::add_actionbhl7s() {
  return actionbhl7s_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL7 >&
Actions::actionbhl7s() const {
  return actionbhl7s_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::ActionBlackholeL7 >*
Actions::mutable_actionbhl7s() {
  return &actionbhl7s_;
}

// -------------------------------------------------------------------

// IpsReq

// -------------------------------------------------------------------

// IpConf

// required uint32 ip = 1;
inline bool IpConf::has_ip() const {
  return _has_bit(0);
}
inline void IpConf::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 IpConf::ip() const {
  return ip_;
}
inline void IpConf::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// required bool l7E = 2;
inline bool IpConf::has_l7e() const {
  return _has_bit(1);
}
inline void IpConf::clear_l7e() {
  l7e_ = false;
  _clear_bit(1);
}
inline bool IpConf::l7e() const {
  return l7e_;
}
inline void IpConf::set_l7e(bool value) {
  _set_bit(1);
  l7e_ = value;
}

// -------------------------------------------------------------------

// IpsResp

// required string dcc = 1;
inline bool IpsResp::has_dcc() const {
  return _has_bit(0);
}
inline void IpsResp::clear_dcc() {
  if (dcc_ != &_default_dcc_) {
    dcc_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& IpsResp::dcc() const {
  return *dcc_;
}
inline void IpsResp::set_dcc(const ::std::string& value) {
  _set_bit(0);
  if (dcc_ == &_default_dcc_) {
    dcc_ = new ::std::string;
  }
  dcc_->assign(value);
}
inline void IpsResp::set_dcc(const char* value) {
  _set_bit(0);
  if (dcc_ == &_default_dcc_) {
    dcc_ = new ::std::string;
  }
  dcc_->assign(value);
}
inline void IpsResp::set_dcc(const char* value, size_t size) {
  _set_bit(0);
  if (dcc_ == &_default_dcc_) {
    dcc_ = new ::std::string;
  }
  dcc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IpsResp::mutable_dcc() {
  _set_bit(0);
  if (dcc_ == &_default_dcc_) {
    dcc_ = new ::std::string;
  }
  return dcc_;
}

// repeated .msg.IpConf ips = 2;
inline int IpsResp::ips_size() const {
  return ips_.size();
}
inline void IpsResp::clear_ips() {
  ips_.Clear();
}
inline const ::msg::IpConf& IpsResp::ips(int index) const {
  return ips_.Get(index);
}
inline ::msg::IpConf* IpsResp::mutable_ips(int index) {
  return ips_.Mutable(index);
}
inline ::msg::IpConf* IpsResp::add_ips() {
  return ips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::IpConf >&
IpsResp::ips() const {
  return ips_;
}
inline ::google::protobuf::RepeatedPtrField< ::msg::IpConf >*
IpsResp::mutable_ips() {
  return &ips_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2eproto__INCLUDED
